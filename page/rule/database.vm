#extends("/page/layout/frametwo.vm")

#block("body")
#require("./rule.css")
<section id="content" class="art-content">
<div class="container">
  <div id="markup">
    <article id="content" class="markdown-body">
      <h1>数据库规范</h1>
      <h2>1. 基础规范</h2>
      <ol>
        <li>全部使用InnoDB引擎, MyISAM适用场景非常小</li>
        <li>字符集, 统一成utf8</li>
        <li>大数据表禁止适用count(*)操作</li>
        <li>单表行记录控制在1000万以内,行平均长度控制在16kb以内, 单表20GB以内</li>
        <li>禁止开发环境直接连接线上环境</li>
        <li>最少授权，值授予最基础的权限需求</li>
        <li>线上数据库和测试数据库尽可能保持一致</li>
        <li>系统目录， 文件，数据库，表，字段名命名长度不超过32个字符</li>
        <li>不使用select, show, update, order等保留字</li>
        <li>命名使用全英文，言之有意</li>
        <li>临时表用上tmp/temp前缀/后缀</li>
        <li>统计表加上stat/statistic前缀/后缀</li>
        <li>历史归档加上完整日期，例如：20130802
          <blockquote>
            <p>mkdir -p /backup/user_log/2013/08<br>
              create table user_detail<br>
              create table xxx_1234<br>
              create table access_log_20130820</p>
          </blockquote>
        </li>
      </ol>
      <h2>2. 数据库命名规范</h2>
      <p>数据库，数据表一律使用前缀<br>
        正式数据库名使用小写英文以及下划线组成,尽量说明是那个应用或者
        系统在使用的.比如:<br>
        web_19floor_net<br>
        web_car </p>
      <p>备份数据库名使用正式库名加上备份时间组成,如:<br>
        web_19floor_net_20070403<br>
        web_car_20070403</p>
      <h2>3. 数据库表命名规范</h2>
      <p>数据表名使用小写英文以及下划线组成,尽量说明是那个应用或者系统在使用的.<br>
        相关应用的数据表使用同一前缀,如论坛的表使用cdb_前缀,博客的数据表
        使用supe_前缀,<br>
        前缀名称一般不超过5字<br>
        比如:<br>
        web_user<br>
        web_group<br>
        supe_userspace</p>
      <p>备份数据表名使用正式表名加上备份时间组成,如:<br>
        web_user_20070403<br>
        web_group_20070403<br>
        supe_userspace_20070403 </p>
      <h2>4. 字段命名规范</h2>
      <p>字段名称使用单词组合完成,首字母小写,后面单词的首字母大写,最好是带表名前缀.<br>
        如 web_user 表的字段:<br>
        userId<br>
        userName<br>
        userPassword </p>
      <p>表与表之间的相关联字段要用统一名称,<br>
        如 web_user 表里面的 userId 和 web_group 表里面的 userId 相对应</p>
      <h2>5. 字段类型规范</h2>
      <p>规则:用尽量少的存储空间来存数一个字段的数据.<br>
        比如能用int的就不用char或者varchar<br>
        能用tinyint的就不用int<br>
        能用varchar(20)的就不用varchar(255)<br>
        时间戳字段尽量用int型，如created:表示从'1970-01-01 08:00:00'开始的int秒数,<br>
        采用英文单词的过去式；gmtCreated:表示datetime类型的时间， <br>
        即形如'1980-01-01 00:00:00'的时间串，Java中对应的类型为Timestamp</p>
      <h2>6. 索引规范</h2>
      <ol>
        <li></li>
      </ol>
      <h2>6. 数据库设计文档规范</h2>
      <h2>7. sql语句规范</h2>
      <ol>
        <li>所有的sql语句一路写成小写</li>
        <li>不允许使用select *<br>
          使用SELECT语句时，不允许使用SELECT *  ，要使用明确的列名。目的是防止数据字段增加后的影响。使用select count(序列列)  代替select count(*)。</li>
        <li>INSERT必须指定插入的字段名
          使用INSERT时，必须指定插入的字段名，主要是考虑以后表结构的变动。</li>
        <li>使用表的别名
          数据库查询，必须使用表的别名，且表的别名要有含义，尽量避免使用a、b、c等作为表的别名。
          当在SQL语句中连接多个表时, 必须使用表的别名并把别名前缀于每个Column上。</li>
        <li>使用显式的类型转换
          不要使用数据库的类型自动转换功能（如数字自动转换为字符串），应使用显式的类型转换。自动转换时往往导致该字段的索引无法使用。</li>
        <li>避免在索引列上使用计算<br>
          <em>低效</em>
          <blockquote>
            <p>select ..
              from dept
              where sal * 12 &gt; 2500; <em>高效</em> select ..
              from dept
              where sal &gt; 2500/12;</p>
          </blockquote>
        </li>
      </ol>
    </article>
  </div>
</div>
</section>
#end   
    #require("page/rule/components.vm")
#end